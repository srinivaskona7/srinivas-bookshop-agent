version: '3.8'

services:
  mongo:
    image: mongo:7
    container_name: srinivas-bookshop-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: srinivas-bookshop
    ports:
      - "27017:27017"
    volumes:
      # Use a named volume for persistent MongoDB storage. The syntax
      # 'mongo-data:/data/db' creates a volume called 'mongo-data' and
      # mounts it at '/data/db' inside the container. This avoids using
      # an undefined path like 'mongo_/data/db'.
      - mongo-data:/data/db
    networks:
      - bookshop-network

  backend:
    build: ./backend
    container_name: srinivas-bookshop-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://mongo:27017/srinivas-bookshop
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318/v1/traces
      - API_BASE_URL=http://localhost:5000
      # Set service attributes via environment variables instead of code to avoid
      # direct dependency on @opentelemetry/resources. These will be used by
      # the OpenTelemetry SDK to annotate spans.
      - OTEL_SERVICE_NAME=srinivas-bookshop-backend
      - OTEL_SERVICE_VERSION=1.0.0
    depends_on:
      - mongo
      - otel-collector
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - bookshop-network

  frontend:
    build: ./frontend
    container_name: srinivas-bookshop-frontend
    restart: unless-stopped
    ports:
      - "3000:3000" 
    environment:
      - PORT=3000
    networks:
      - bookshop-network

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: srinivas-bookshop-otel-collector
    restart: unless-stopped
    command: ["--config=/etc/otelcol-contrib/otel-collector.yml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otelcol-contrib/otel-collector.yml
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8889:8889"   # Prometheus metrics
    depends_on:
      - jaeger
    networks:
      - bookshop-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: srinivas-bookshop-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686" # Jaeger UI
      - "14268:14268" # Jaeger collector HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - bookshop-network

volumes:
  mongo-data:

networks:
  bookshop-network:
    driver: bridge